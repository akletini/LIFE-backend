plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.palantir.docker' version '0.34.0'
    id 'com.palantir.docker-run' version '0.34.0'
}

group = 'akletini'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.hibernate:hibernate-validator:8.0.0.Final'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'org.postgresql:postgresql'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.projectlombok:lombok'

    // Google tasks
    implementation 'com.google.api-client:google-api-client:2.0.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.apis:google-api-services-tasks:v1-rev20210709-2.0.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation "me.paulschwarz:spring-dotenv:3.0.0"
    implementation 'org.json:json:20220924'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation("org.springframework.boot:spring-boot-starter-test"){
        exclude group: "com.vaadin.external.google", module:"android-json"
    }
}

tasks.named("dockerRun") {
    dockerRun {
        name "life-test-postgres"
        image "postgres"
        ports "54321:5432"
        daemonize true
        clean true
        env "POSTGRES_PASSWORD": "postgres"
    }
}
tasks.named("dockerRun").get().finalizedBy(tasks.named("test").get())

test {
    dependsOn(tasks.named("dockerRun").get())
    useJUnitPlatform()

    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
    }
}

tasks.named("dockerStop") {
    dockerStop {
    }
}
tasks.named("test").get().finalizedBy(tasks.named("dockerStop").get())


